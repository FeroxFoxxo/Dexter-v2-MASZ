// <auto-generated />
using Bot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bot.Migrations
{
    [DbContext(typeof(BotDatabase))]
    [Migration("20220927152406_UserLeftDatabase")]
    partial class UserLeftDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Bot")
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Bot.Models.AppSettings", b =>
                {
                    b.Property<ulong>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("AbsolutePathToFileUpload")
                        .HasColumnType("longtext");

                    b.Property<string>("AuditLogWebhookUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("longtext");

                    b.Property<bool>("CorsEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DiscordBotToken")
                        .HasColumnType("longtext");

                    b.Property<string>("EmbedContent")
                        .HasColumnType("longtext");

                    b.Property<string>("EmbedTitle")
                        .HasColumnType("longtext");

                    b.Property<int>("EncryptionType")
                        .HasColumnType("int");

                    b.Property<string>("Lang")
                        .HasColumnType("longtext");

                    b.Property<string>("ServiceDomain")
                        .HasColumnType("longtext");

                    b.Property<string>("SiteAdmins")
                        .HasColumnType("longtext");

                    b.HasKey("ClientId");

                    b.ToTable("AppSettings", "Bot");
                });

            modelBuilder.Entity("Bot.Models.GuildConfig", b =>
                {
                    b.Property<ulong>("GuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("AdminRoles")
                        .HasColumnType("longtext");

                    b.Property<string>("BotChannels")
                        .HasColumnType("longtext");

                    b.Property<bool>("ExecuteWhoIsOnJoin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ModNotificationDm")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ModRoles")
                        .HasColumnType("longtext");

                    b.Property<int>("PreferredLanguage")
                        .HasColumnType("int");

                    b.Property<bool>("PublishModeratorInfo")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong>("StaffAnnouncements")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("StaffChannels")
                        .HasColumnType("longtext");

                    b.Property<ulong>("StaffLogs")
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("StrictModPermissionCheck")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("GuildId");

                    b.ToTable("GuildConfigs", "Bot");
                });

            modelBuilder.Entity("Bot.Models.LeftUser", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("AvatarId")
                        .HasColumnType("longtext");

                    b.Property<ushort>("DiscriminatorValue")
                        .HasColumnType("smallint unsigned");

                    b.Property<bool>("IsBot")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PublicFlags")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LeftUsers", "Bot");
                });
#pragma warning restore 612, 618
        }
    }
}
