// <auto-generated />
using System;
using Games.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Games.Migrations
{
    [DbContext(typeof(GamesDatabase))]
    partial class GamesDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Games")
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Games.Models.Connection", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("ConnectionId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsGuest")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("UserId");

                    b.HasIndex("GameId");

                    b.ToTable("GameConnections", "Games");
                });

            modelBuilder.Entity("Games.Models.GameProfile", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.HasKey("UserId");

                    b.ToTable("GameProfiles", "Games");
                });

            modelBuilder.Entity("Games.Models.GameRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int?>("Draws")
                        .HasColumnType("int");

                    b.Property<float>("Elo")
                        .HasColumnType("float");

                    b.Property<int>("GameCount")
                        .HasColumnType("int");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ulong?>("GameProfileUserId")
                        .HasColumnType("bigint unsigned");

                    b.Property<int?>("Losses")
                        .HasColumnType("int");

                    b.Property<float>("PlacementFactor")
                        .HasColumnType("float");

                    b.Property<int?>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameProfileUserId");

                    b.ToTable("GameRatings", "Games");
                });

            modelBuilder.Entity("Games.Models.GameRoom", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("AllowGuests")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Data")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ulong>("MasterId")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("MaxPlayers")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("TimeCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("TimeUpdated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("GameId");

                    b.ToTable("GameStates", "Games");
                });

            modelBuilder.Entity("Games.Models.Connection", b =>
                {
                    b.HasOne("Games.Models.GameRoom", "Game")
                        .WithMany("Players")
                        .HasForeignKey("GameId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Games.Models.GameRating", b =>
                {
                    b.HasOne("Games.Models.GameProfile", null)
                        .WithMany("Ratings")
                        .HasForeignKey("GameProfileUserId");
                });

            modelBuilder.Entity("Games.Models.GameProfile", b =>
                {
                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("Games.Models.GameRoom", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
